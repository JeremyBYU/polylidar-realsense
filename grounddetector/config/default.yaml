---
  name: Default Settings for D435. Tilted near ground (< 2 meters max distance)
  advanced: "grounddetector/config/json/high_accuracy.json" # JSON file path holding advanced settings
  show_images: true
  show_polygon: true
  mesh_creation: 'delaunay' # 'delaunay' or 'uniform'
  color: # RGB Camera Settings
    width: 424
    height: 240
    framerate: 15
  depth: # Depth Camera Settings
    width: 424
    height: 240
    framerate: 15
  filters: # Any realsense filters you wish to apply
    decimation:
      active: false
      magnitude: 2 # can be 2, 4, 8
    temporal:
      active: true
      smooth_alpha: 0.20 # the weight with default value 0.4, between 1 and 0 -- 1 means 100% weight from the current pixel
      smooth_delta: 60.0 # the filter threshold for edge classification and preserving with default value of 20 depth increments
      persistence_control: 2 # 0 = disabled , 1 = Valid in 8/8, 2 = Valid in 2/last 3
    spatial:
      active: true
      smooth_alpha: 0.35 # The weight of the current pixel for smoothing is bounded within [25..100]%
      smooth_delta: 40.0 # The depth gradient below which the smoothing will occur as number of depth levels
      magnitude: 3 # Number of iteration for filter
      hole_fill: 4 # 0-disabled, 1=2 pixel radius, 3=4 pixel, 4=8 pixel, 5=16 pixel, 6=unlimited
  polygon:
    frameskip: # criterions to skip polygon generation given input data
      depth_min_valid: 0.5 # minimum percentage needed from depth image pixels with valid data
    pointcloud: # Settings for point cloud generation from depth map image
      patch: # What portion of the depth image should be used to generate the point cloud
        - 0.025 # Starting percentage down the y-axis
        - 0.975  # Ending percentage down the y-axis
        - 0.025 # Starting percentage on the x-axis
        - 0.975  # Ending percentage on the x-axis
      ds: # How should we downsample from the patch
        - 1 # Sample every Y rows
        - 1 # Sample every X cols
    polylidar: # Parameters we send to polylidar. Determine plane and polygon extraction from point clouds.
      alpha: 0.0 # must be set to 0.0 if using lmax
      lmax: 0.05 # maximum distance between points in plane for spatial connection
      zThresh: 0.01 # triangles with z-height less than this have normal filtering skipped. For sensor noise.
      normThresh: 0.70 # triangles whose normal is greater than X degrees are filtered acos(tri_norm * [0,0,1])
      normThreshMin: 0.70 # triangles must have a minimum amount of planarity. ignores zThresh
      minHoleVertices : 6 # minimum number of vertices in a hole to return
      minTriangles: 200 # minimum number of triangles needed to make a plane
    ground_normal: # Settings used to estimate normal of ground plane in point cloud.
                   # This is used to rotate the point cloud such that ground normal aligns with the z-axis
      patch: # What portion of the depth image should be used to estimate normals. Will be downsampled.
        - 0.75 # Starting percentage down the y-axis
        - 1.0  # Ending percentage down the y-axis
        - 0.10 # Starting percentage right of the x-axis
        - 0.9  # Ending percentage right of the x-axis
      ds: # How should we downsample from the patch. Note we will perform SVD on this patch
        - 10 # Sample every Y rows
        - 10 # Sample every X cols
      buffer: 10 # Take average of the last $(buffer) normals calculated. Not implemented (WIP).
    postprocess: # post processing of polygons returned from polylidar for ground/obstacle identification
      filter: # obstacles must have these characteristics
        hole_area:
          min: 0.001   # m^2
          max: 0.785 # m^2
        hole_vertices:
          min: 6
        plane_area:
          min: .5 # m^2
      # These parameters correspond to Shapely polygon geometry operations
      positive_buffer: 0.000 # m, Positively expand polygon.  Fills in small holes
      negative_buffer: 0.00 # m, Negative buffer to polygon. Expands holes and constricts outer hull of polygon
      simplify: 0.00  # m, simplify edges of polygon
  